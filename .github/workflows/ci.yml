name: "CI"
on:
  - push
  - pull_request

jobs:
  ormolu:
    name: "Ormolu"
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v4

    - name: "Run Ormolu"
      uses: haskell-actions/run-ormolu@v12
      with:
        version: 0.7.4.0
  build:
    name: "Build (GHC ${{ matrix.ghc-version}} on ${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        ghc-version:
        - 9.4.8
        cabal-version:
        - 3.10.3.0
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Set up GHC ${{ matrix.ghc-version }}"
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc-version }}
          cabal-version: ${{ matrix.cabal-version }}
          cabal-update: true

      - name: "Configure the build"
        # The last step generates dist-newstyle/cache/plan.json for the cache key.
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build all --dry-run

      - name: "Restore cached dependencies"
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        # If we had an exact cache hit, the dependencies will be up to date.
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal build all --only-dependencies

      - name: "Save cached dependencies"
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: "Build"
        run: |
          cabal build all

      - name: "Run tests"
        run: |
          cabal test all
