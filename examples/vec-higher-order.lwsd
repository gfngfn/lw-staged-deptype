let concat_and_add =
  fun (m : Int) -> fun (n : Int) ->
    fun (f : (p : Int) -> &(Vec %p -> Vec %p -> Vec %p)) ->
      &(fun (u1 : Vec %m) -> fun (u2 : Vec %n) -> fun (v : Vec %(add m n)) ->
        ~(f (add m n)) (~(gen_vconcat m n) u1 u2) v
      )
in
&(
  ~(concat_and_add 1 2 gen_vadd) [| 3 |] [| 1; 4 |] [| 1; 5; 9 |]
)
