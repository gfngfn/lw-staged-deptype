let aux = rec(self : (q : Nat) -> {p : Nat} -> Vec p -> Vec (p * q)) ->
  fun(m : Nat) -> fun{n : Nat} -> fun(e : Vec n) ->
    if m <= 0 then
      [| |]
    else
      vconcat e (self (m - 1) e)
in
let vrepeat (m : Nat) {n : Nat} (v : Vec n) = aux m v in
vrepeat 5 [| 4; 6; 9 |]
