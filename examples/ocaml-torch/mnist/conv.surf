let batch_size = 256 in
let epochs = 5000 in
let learning_rate = 0.001 in
let relu = () in (* TODO *)

(* let device = Device.cuda_if_available () in *)
let vs = Var_store.create "cnn" () in
let conv2d1 =
  Layer.conv2d_
    {4242} {5757} {4423} (* TODO *)
    5 (* ksize *)
    1 (* stride *)
    0 (* padding *)
    1 (* input_dim *)
    32 (* output_dim *)
    vs
in
let conv2d2 =
  Layer.conv2d_
    {4242} {5757} {4423} (* TODO *)
    5 (* ksize *)
    1 (* stride *)
    0 (* padding *)
    32 (* input_dim *)
    64 (* output_dim *)
    vs
in
let linear1 =
  Layer.linear
    {[batch_size]} (* TODO *)
    1024 (* input_dim *)
    1024 (* output_dim *)
    vs
    relu
in
let linear2 =
  Layer.linear
    {[batch_size]} (* TODO *)
    1024 (* input_dim *)
    Mnist_helper.label_count (* output_dim *)
    vs
    ()
in
let adam = Optimizer.adam vs learning_rate in
let model (is_training : Bool) (xs : Tensor [batch_size, Mnist_helper.image_dim]) = (* TODO *)
  Tensor.reshape [0 - 1, 1, 28, 28] xs
  |> Layer.forward conv2d1
  |> Tensor.max_pool2d
      0 0 (* padding *)
      2 2 (* ksize *)
      2 2 (* stride *)
  |> Layer.forward conv2d2
  |> Tensor.max_pool2d
      0 0 (* padding *)
      2 2 (* ksize *)
      2 2 (* stride *)
  |> Tensor.reshape [0 - 1, 1024]
  |> Layer.forward linear1
  |> Tensor.dropout 0.5 is_training
  |> Layer.forward linear2
in
let train_model = model true in
let test_model = model false in
(range 1 epochs) |> List.iter (fun(batch_idx : Int) ->
  let (batch_images, batch_labels) =
    Dataset_helper.train_batch
      batch_size
      Mnist_helper.train_images
      Mnist_helper.train_labels
      Mnist_helper.test_images
      Mnist_helper.test_labels
      batch_idx
  in
  let loss =
    Tensor.cross_entropy_for_logits
      _ {Mnist_helper.label_count}
      (train_model batch_images) batch_labels
  in
  Optimizer.backward_step adam loss;
  if mod batch_idx 50 == 0 then
    let test_accuracy =
      Dataset_helper.batch_accuracy
        _ _ _ {Mnist_helper.label_count}
        batch_size
        "test"
        Mnist_helper.train_images
        Mnist_helper.train_labels
        Mnist_helper.test_images
        Mnist_helper.test_labels
        test_model
    in
    (* print_int batch_idx *)
    print_float (Tensor.float_value loss);
    print_float test_accuracy
  else
    ()
)
