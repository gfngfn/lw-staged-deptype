let f {k : Nat} {l : Nat} {m : Nat} {n : Nat} =
  &(fun(matA : Mat %k %l) ->
    fun(matB : Mat %m %n) ->
    fun(matC : Mat %(l - 2 * m) %n) ->
      ~(gen_mmult {k} {l} {n})
        matA
        (~(gen_mconcat_vert {l - m} {m} {n})
          (~(gen_mconcat_vert {m} {l - 2 * m} {n}) matB matC)
          matB)
  )
in
&(
  ~(f {2} {5} {1} {3})
  [#1, 2, 3, 4, 5;
    6, 7, 8, 9, 10#]
  [#11, 12, 13#]
  [#1, 2, 3;
    4, 5, 6;
    7, 8, 9#]
)
