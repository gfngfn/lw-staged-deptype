let rec aux (m : Nat) {n : Nat} (e : Vec n) : Vec (n * m) =
    if m <= 0 then
      [| |]
    else
      vconcat {n} {n * (m - 1)} e (aux (m - 1) {n} e)
in
let vrepeat (m : Nat) {n : Nat} (v : Vec n) = aux m {n} v in
vrepeat 5 {3} [| 4; 6; 9 |]
